<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Product Catalog with Cart</title>
    
    <!-- Bootstrap 5.3 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    
    <script src="https://cdn.jsdelivr.net/npm/emailjs-com@3/dist/email.min.js"></script>
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background: #f8f9fa;
            padding: 20px;
        }
        .card {
            border-radius: 10px;
            transition: 0.3s;
        }
        .card:hover {
            transform: scale(1.03);
        }
        .category-btn {
            margin: 5px;
        }
    </style>
</head>
<body>

    <div class="container">
        <div class="d-flex justify-content-between my-3">
            <h2>Product Catalog</h2>
            <div>
                <span id="userGreeting" class="me-3">Hello, <b><%= user_name %></b>!</span>
                <a href="/"><button class="btn btn-danger" onclick="logout()">Logout</button></a>
            </div>
        </div>

        <input type="text" id="searchBox" class="form-control w-50 mx-auto mb-3" placeholder="Search products..." oninput="searchProducts()">

        <div class="text-center mb-3">
            <button class="btn btn-primary category-btn" onclick="filterProducts('all')">All</button>
            <button class="btn btn-secondary category-btn" onclick="filterProducts('electronics')">Electronics</button>
            <button class="btn btn-success category-btn" onclick="filterProducts('clothing')">Clothing</button>
            <button class="btn btn-danger category-btn" onclick="filterProducts('jewelery')">Jewelery</button>
        </div>

        <div id="content" class="row g-4"></div>
    </div>

    <button class="btn btn-primary position-fixed bottom-0 end-0 m-4" data-bs-toggle="offcanvas" data-bs-target="#cartOffcanvas">Cart (<span id="cartCount">0</span>)</button>

    <div class="offcanvas offcanvas-end" id="cartOffcanvas">
        <div class="offcanvas-header">
            <h5>Shopping Cart</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas"></button>
        </div>
        <div class="offcanvas-body" id="cartItems"></div>
        <div class="p-3">
            <h5>Total: $<span id="cartTotal">0.00</span></h5>
            <form id="orderForm" class="m-2 p-2">
                <input type="submit" class="btn btn-success w-100" value="Place Order">
                <input type="text" class="form-control" id="address" placeholder="Enter your address" required>
                <br>
                <input type="email" class="form-control" id="email" placeholder="Enter your email" required>
            </form>
        </div>
    </div>

    <div class="offcanvas offcanvas-center" id="orderConfirmation">
        <div class="offcanvas-header">
            <h5>Order Placed</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas"></button>
        </div>
        <div class="offcanvas-body text-center">
            <p>Your order has been placed successfully!</p>
            <p>Order Number: <strong id="orderNumber"></strong></p>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let cart = [];
        let productsData = [];

        async function fetchProducts() {
            const response = await fetch('https://fakestoreapi.com/products');
            productsData = await response.json();
            displayProducts(productsData);
        }

        function displayProducts(products) {
            const container = document.getElementById('content');
            container.innerHTML = "";
            products.forEach(item => {
                const card = `<div class="col-md-4">
                                <div class="card p-3 shadow">
                                    <img src="${item.image}" class="card-img-top" alt="${item.title}" style="height: 200px; object-fit: contain;">
                                    <div class="card-body text-center">
                                        <h5 class="card-title">${item.title}</h5>
                                        <h6 class="text-success">$${item.price}</h6>
                                        <button class="btn btn-primary" onclick="addToCart(${item.id})">Add to Cart</button>
                                    </div>
                                </div>
                            </div>`;
                container.innerHTML += card;
            });
        }

        function searchProducts() {
            const searchTerm = document.getElementById("searchBox").value.toLowerCase();
            const filteredProducts = productsData.filter(product => 
                product.title.toLowerCase().includes(searchTerm) || 
                product.category.toLowerCase().includes(searchTerm)
            );
            displayProducts(filteredProducts);
        }

        function filterProducts(category) {
            if (category === 'all') {
                displayProducts(productsData);
            } else {
                const filteredProducts = productsData.filter(product => 
                    product.category.toLowerCase().includes(category)
                );
                displayProducts(filteredProducts);
            }
        }

        function addToCart(productId) {
            const product = productsData.find(item => item.id === productId);
            const cartItem = cart.find(item => item.id === productId);
            
            if (cartItem) {
                cartItem.quantity += 1; // Increase quantity if item already in cart
            } else {
                cart.push({...product, quantity: 1}); // Add new item with quantity 1
            }
            updateCart();
        }

        function updateCart() {
            document.getElementById("cartCount").innerText = cart.length;
            const cartContainer = document.getElementById("cartItems");
            cartContainer.innerHTML = "";
            let total = 0;
            cart.forEach(item => {
                cartContainer.innerHTML += `<p>${item.title} - <code>$${item.price}</code> x <span style="color: orange">${item.quantity}</span></p>`;
                total += item.price * item.quantity;
            });
            document.getElementById("cartTotal").innerText = total.toFixed(2);
        }

        const form = document.getElementById('userForm');
        const responseMessage = document.getElementById('responseMessage');

        document.getElementById('orderForm').addEventListener('submit', async (event) => {
            event.preventDefault(); // Prevent default form submission

            const email = document.getElementById('email').value;
            const address = document.getElementById('address').value;
            // var items = string(cart)
        
            const data = {
                email: email,
                address: address,
                cart : JSON.stringify(cart, null, 4)
            };

            // Send POST request to server
            try {
                const response = await fetch('/place_order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)

                });
                const result = await response.json();
                if (response.status) {
                    // console.log(result.order_num);
                    document.getElementById("orderNumber").innerText = result.order_num;
                    // sendEmail(email, orderNumber);

                    cart = [];
                    updateCart();
                    new bootstrap.Offcanvas(document.getElementById('orderConfirmation')).show();
                } else {
                    responseMessage.innerHTML = '<p>Error placing order.</p>';
                }
            } catch (error) {
                responseMessage.innerHTML = '<p>Network error.</p>';
            }
        });
        fetchProducts();
    </script>
</body>
</html>
